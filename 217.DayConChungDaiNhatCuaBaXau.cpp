#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define ed "\n"
int x_4axis[] = {-1, 0, 0, 1};
int y_4axis[] = {0, -1, 1, 0};
int x_8axis[] = {-1, -1, -1, 0, 0, 1, 1, 1};
int y_8axis[] = {-1, 0, 1, -1, 1, -1, 0, 1};
const int MOD = 1e9 + 7;
//     ___           ___           ___           ___           ___           ___         ___
//    /  /\         /  /\         /  /\         /  /\         /__/\         /  /\       /  /\
//   /  /::\       /  /:/        /  /::\       /  /:/_        \  \:\       /  /:/      /  /::\
//  /  /:/\:\     /  /:/        /  /:/\:\     /  /:/ /\        \  \:\     /  /:/      /  /:/\:\
// /  /:/~/::\   /  /::\ ___   /  /:/\ \:\   /  /:/ /:/_   _____\__\:\   /  /::\     /  /:/~/:/_
///__/:/ /:/\:\ /__/:/\:\  /\ /__/:/  \ \:\ /__/:/ /:/ /\ /__/::::::::\ /__/:/\:\   /__/:/ /::\/\
//\  \:\/:/~/:/ \__\/  \:\/:/ \  \:\  /~/:/ \  \:\/:/ /:/ \  \:\~~~~~~/ \__\/  \:\  \  \:\/:/\::/
// \  \::/ /:/       \__\::/   \  \:\/ /:/   \  \::/ /:/   \  \:\            \__\:\  \  \::/\_\/
//  \  \:\/:/        /  /:/     \  \:\/:/     \  \:\/:/     \  \:\           /  /:/   \  \:\      __
//   \  \::/        /__/:/       \  \::/       \  \::/       \  \:\         /__/:/     \  \:\    /_/\
//    \__\/         \__\/         \__\/         \__\/         \__\/         \__\/       \__\/    \_\/

// dp[i][j] : LCS cua xau s ket thuc o i va t ket thuc o j
// dp[0][i] = dp[i][0] = 0
// s[i] == t[j] => dp[i - 1][j - 1]
// else max dp[i - 1][j], dp[i][j - 1]

int dp[101][101][101];

int main(){
	ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	int cases; cin >> cases;
	while(cases--){
		int n, m, v;
		cin >> n >> m >> v;
		string s, t, x;
		cin >> s >> t >> x;
		for(int i = 0; i <= n; i++){
			for(int j = 0; j <= m; j++){
				for(int k = 0; k <= v; k++){
					if(i == 0 || j == 0 || k == 0) dp[i][j][k] = 0;
					else{
						if(s[i - 1] == t[j - 1] && t[j - 1] == x[k - 1]) dp[i][j][k] = dp[i - 1][j - 1][k - 1] + 1;
						else dp[i][j][k] = max({dp[i - 1][j][k], dp[i][j - 1][k], dp[i][j][k - 1]});					
					}
				}
			}
		}
		cout << dp[n][m][v] << ed;
	}
	return 0;
}
